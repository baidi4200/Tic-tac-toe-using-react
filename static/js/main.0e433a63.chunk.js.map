{"version":3,"sources":["components/Square.js","components/Board.js","helper.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["style","background","border","fontsize","fontweight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","styles","BootstrapButton","boxShadow","textTransform","fontSize","padding","lineHeight","backgroundColor","borderColor","fontFamily","join","Game","useState","Array","fill","board","setboard","xIsNext","setxIsNext","winner","lines","length","a","b","c","calculateWinner","boardcopy","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e433a63.chunk.js","sourcesContent":["import React from 'react'\r\nconst style = {\r\n    background: 'lightblue',\r\n    border: '5px solid darkblue',\r\n    fontsize: '50px',\r\n    fontweight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n}\r\n\r\n// This is destructuring the props { value, onClick }\r\nexport const Square = ({ value, onClick }) => (\r\n    //This is JSX dont fool\r\n    <button style={style} onClick={onClick}>\r\n        {value}\r\n\r\n    </button>\r\n)\r\n","import React from 'react'\r\nimport { Square } from './Square'\r\nconst style = {\r\n    border: '4px solid darkblue',\r\n    borderRadius: '10px',\r\n    width: '250px',\r\n    height: '250px',\r\n    margin: '0 auto',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n}\r\nexport const Board = ({ squares, onClick }) => (\r\n    <div style={style}>\r\n        {squares.map((square, i) => (\r\n            <Square key={i} value={square} onClick={() => onClick(i)} />\r\n\r\n        )\r\n        )}\r\n        {/* <Square value=\"1\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"2\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"3\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"4\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"5\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"6\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"7\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"8\" onClick={() => onClick(\"Dummy value\")} />\r\n        <Square value=\"9\" onClick={() => onClick(\"Dummy value\")} /> */}\r\n    </div>\r\n)\r\n","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst squares = [\r\n    null, null, null,\r\n    'X', 'X', '0',\r\n    null, null, null,\r\n]","import React, { useState } from 'react';\r\n\r\n\r\nimport { Board } from './Board';\r\nimport { calculateWinner } from '../helper';\r\nconst styles = {\r\n    margin: '20px auto',\r\n    width: '200px'\r\n};\r\nconst BootstrapButton = {\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1.5,\r\n    backgroundColor: '#0063cc',\r\n    borderColor: '#0063cc',\r\n    fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n        backgroundColor: '#0069d9',\r\n        borderColor: '#0062cc',\r\n        boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#0062cc',\r\n        borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n\r\n}\r\n\r\n\r\nexport const Game = () => {\r\n    const [board, setboard] = useState(Array(9).fill(null))\r\n    const [xIsNext, setxIsNext] = useState(true);\r\n    const winner = calculateWinner(board)\r\n    const handleClick = i => {\r\n        const boardcopy = [...board];\r\n        //if user clicked an accupied square or if game is won, return\r\n        if (winner || boardcopy[i]) return;\r\n        //put an X or 0 when clciekd on square\r\n        boardcopy[i] = xIsNext ? 'X' : '0';\r\n        setboard(boardcopy);\r\n        setxIsNext(!xIsNext);\r\n\r\n\r\n    }\r\n    const jumpTo = () => {\r\n\r\n    }\r\n    const rendermoves = () => {\r\n        return <button style={BootstrapButton}\r\n            onClick={() => setboard(Array(9).fill(null))}>start Game</button>\r\n    }\r\n    return (\r\n        <>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div style={styles}>\r\n                <p>{winner ? 'winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : '0')}</p>\r\n                {rendermoves()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport { Game } from './components/Game';\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Tic-Tac-Toe</h1>\n      <Game />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}